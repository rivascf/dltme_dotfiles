    1  ros2
    2  source /opt/ros/humble/setup.bash
    3  ros2
    4  ros2 run demo_nodes_py listener
    5  printenv | grep -i ROS
    6  mkdir borrame 
    7  ls
    8  ls -l
    9  sudo mkdir borrame2
   10  ls -l
   11  rm borrame
   12  rm -rf borrame
   13  ls -l
   14  rm -rf borrame2
   15  ls -l
   16  sudo apt-get update
   17  sudo apt update
   18  apt list --upgradable
   19  sudo apt upgrade
   20  locale
   21  sudo apt install software-properties-common
   22  sudo add-apt-repository universe
   23  sudo apt update && sudo apt install curl 
   24  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
   25  ls /usr/share/k*
   26  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
   27  sudo apt update
   28  sudo apt install ros-humble-desktop
   29  colcon
   30  sudo apt install ros-dev-tools
   31  colcon
   32  ros2
   33  source /opt/ros/humble/setup.bash
   34  ros2
   35  ls -la
   36  ls -l
   37  echo "hola clae"
   38  echo "hola clase"
   39  echo "source /opt/ros/humble/setup.bash"
   40  echo "source /opt/ros/humble/setup.bash" >> .bashrc 
   41  nano .bashrc
   42  ros2 run demo_nodes_cpp talker
   43  printenv | grep -i ROS
   44  nano .bashrc
   45  ls -la
   46  echo "source /opt/ros/humble/setup.bash" >> .bash_aliases 
   47  ls -la
   48  nano .bash_aliases 
   49  source .bashrc
   50  printenv | grep -i ROS
   51  ls
   52  ll
   53  mkdir -p ~/ROS2Dev/ros2_ws/src
   54  cd ~/ROS2Dev/ros2_ws/src/
   55  sudo apt install ros-humble-gazebo-*
   56  sudo apt install ros-humble-cartographer
   57  sudo apt install ros-humble-cartographer-ros
   58  sudo apt install ros-humble-navigation2
   59  sudo apt install ros-humble-nav2-bringup
   60  ls -lsa
   61  ls -l
   62  ls -la
   63  cd ..
   64  mkdir -p ./turtlebot3_ws/src
   65  l
   66  cd turtlebot3_ws/
   67  ls
   68  cd src
   69  git
   70  git clone -b humble-devel https://github.com/ROBOTIS-GIT/DynamixelSDK.git
   71  git clone -b humble-devel https://github.com/ROBOTIS-GIT/turtlebot3_msgs.git
   72  git clone -b humble-devel https://github.com/ROBOTIS-GIT/turtlebot3.git
   73  ls
   74  cd ..
   75  colcon build --symlink-install
   76  ls -la
   77  nano ~/.bash_aliases 
   78  source .bashrc
   79  source ~/.bashrc
   80  nano ~/.bash_aliases 
   81  source ~/.bashrc
   82  sudo apt-update -y && sudo apt update -y
   83  sudo apt-get update -y && sudo apt update -y
   84  sudo apt upgrade -y
   85  sudo apt-get update -y && sudo apt update -y
   86  sudo apt upgrade -y
   87  ros2 node list
   88  gazebo
   89  export TURTLEBOT3_MODEL=bu
   90  ros2 run turtlebot3_teleop teleop_keyboard 
   91  history | tail -10
   92  history | tail -20
   93  cd ~/ROS2Dev/turtlebot3_ws/src/
   94  git clone -b humble-devel https://github.com/ROBOTIS-GIT/turtlebot3_simulations.git
   95  ll
   96  cd ..
   97  colcon build --symlink-install
   98  ros2 
   99  nano ~/.bash_aliases 
  100  export TURTLEBOT3_MODEL=burger
  101  printenv | grep -i ROS
  102  source ~/.bashrc 
  103  ros2 launch turtlebot3_gazebo empty_world.launch.py 
  104  nano ~/.bash_aliases 
  105  sorce ~/.bashr
  106  source ~/.bashrc
  107  echo $TURTLEBOT3_MODEL
  108  ros2 launch turtlebot3_gazebo empty_world.launch.py 
  109  cd ~/Downloads/
  110  ll
  111  sudo dpkg -i code_1.82.2-1694671812_amd64.deb 
  112  cd ~/ROS2Dev/
  113  ll
  114  cd ros2_ws/src/
  115  cd ..
  116  cd src
  117  code .
  118  ll
  119  rm borrame.py 
  120  ll
  121  cd ..
  122  colcon build --symlink-install
  123  ll
  124  nano ~/.bash_aliases 
  125  source ~/.bashrc
  126  refrescar 
  127  rstterm 
  128  nano ~/.bash_aliases 
  129  rstterm 
  130  actapt 
  131  nano ~/.bash_aliases 
  132  nano
  133  vim
  134  git config --global -l
  135  git config global -l
  136  cd 
  137  ll -la
  138  wget /h
  139  wget https://raw.githubusercontent.com/rivascf/dotfiles-m-temp/main/gitconfig
  140  ll
  141  mv gitconfig .gitconfig
  142  ll
  143  git config global -l
  144  git config --global -l
  145  nano .gitconfig
  146  git config --global -e
  147  ll
  148  ls
  149  cd 
  150  ls
  151  actapt 
  152  sudo apt upgrade
  153  wget https://github.com/neovim/neovim/releases/download/stable/nvim.appimage -P ~/Downloads/
  154  cd Downloads/
  155  l
  156  chmod u+x nvim.appimage && ./nvim.appimage
  157  sudo apt install libfuse2
  158  sudo mv nvim.appimage /usr/bin/nvim
  159  l
  160  cd ..
  161  nvim
  162  nvim .gitconfig 
  163  wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
  164  rstterm 
  165  nvm -v
  166  nvm install --lts
  167  node -v
  168  nvm install v16.20.2
  169  nvm use v18.18.0 
  170  npm install -g neovim
  171  npm install -g npm@10.1.0
  172  npm fund
  173  npm update --all
  174  ls ~/.config/
  175  wget https://raw.githubusercontent.com/rivascf/dotfiles-m-temp/main/config/nvim/init.lua -P ~/.config/nvim/
  176  nvim
  177  nvim ~/.config/nvim/init.lua 
  178  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/SourceCodePro.zip -P ~/Downloads
  179  mkdir ~/.fonts
  180  unzip ~/Downloads/SourceCodePro.zip -d ~/.fonts/Roboto/SourceCodePro/
  181  fc-cache -fv
  182  fc-list | grep ".fonts"
  183  fc-list | grep ".fonts" | grep "Sauce"
  184  fc-cache -fv
  185  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/RobotoMono.zip -P ~/Downloads
  186  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/JetBrainsMono.zip -P ~/Downloads
  187  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/Hack.zip -P ~/Downloads
  188  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/Ubuntu.zip -P ~/Downloads
  189  ll ~/Downloads/
  190  unzip ~/Downloads/Hack.zip -d ~/.fonts/Hack/
  191  unzip ~/Downloads/JetBrainsMono.zip -d ~/.fonts/JetBrainsMono/
  192  unzip ~/Downloads/RobotoMono.zip -d ~/.fonts/Roboto/
  193  unzip ~/Downloads/Ubuntu.zip -d ~/.fonts/Ubuntu/
  194  fc-cache -fv
  195  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  196  source "$HOME/.cargo/env"
  197  rustup override set stable
  198  rustup update stable
  199  sudo apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python3-openssl
  200  cc -v
  201  cargo install --git https://github.com/Peltoche/lsd.git --branch master
  202  lsd ~/.config/
  203  mkdir -p ~/.config/lsd && cd lsd
  204  cd ~/.config/lsd/
  205  wget https://raw.githubusercontent.com/rivascf/dotfiles-m-temp/main/config/lsd/config.yaml -P ~/.config/lsd/
  206  wget https://raw.githubusercontent.com/rivascf/dotfiles-m-temp/main/config/lsd/themes/terminal-colors.yaml -P ~/.config/lsd/colors.yaml
  207  ls
  208  lsd -la
  209  nvim config.yaml 
  210  lsd -la
  211  nvim config.yaml 
  212  l
  213  lsd -l  ~/.config/lsd
  214  nvim config.yaml 
  215  lsd -l  ~/.config/lsd
  216  cd
  217  nvim ~/.config/nvim/init.lua 
  218  pip3
  219  sudo apt install python3-pip
  220  pip3 -v
  221  pip3 install neovim pynvim
  222  neovim
  223  nvim
  224  nvim ~/.config/nvim/init.lua 
  225  cd ROS2Dev/
  226  l
  227  cd 
  228  nvim .bashrc 
  229  rstterm 
  230  nvim .bash_aliases 
  231  rstterm 
  232  vim
  233  cd ROS2Dev/ros2_ws/src/
  234  code .
  235  fc-list | grep ".fonts" | grep "SauceCode "
  236  fc-list | grep ".fonts" | grep "SauceCode"
  237  fc-list | grep ".fonts" | grep "SauceCode" | grep "Mono"
  238  fc-list | grep ".fonts" | grep "Roboto" | grep "Mono"
  239  ls
  240  ll
  241  git config --global -e
  242  cd
  243  vim ~/.config/lsd/colors.yaml/
  244  cd 
  245  cd ~/.config/lsd/
  246  ll
  247  cd colors.yaml/
  248  ls
  249  mv terminal-colors.yaml ../colors.yaml
  250  mv terminal-colors.yaml ../colors1.yaml
  251  cd ..
  252  ls
  253  rm colors.yaml/
  254  rm -rf colors.yaml/
  255  l
  256  mv colors1.yaml colors.yaml
  257  ls
  258  ll
  259  cd 
  260  ll
  261  ros2 launch turtlebot3_gazebo empty_world.launch.py 
  262  history >> ros2vm-history-250923.txt
  263  ll
  264  rm ~/Downloads/*
  265  ll ~/Downloads/
  266  lt ~/ROS2Dev/ros2_ws/src/
  267  lt ~/ROS2Dev/ros2_ws/
  268  ls
  269  ll
  270  vim ~/.config/lsd/colors.yaml/
  271  vim ~/.config/lsd/colors.yaml
  272  ros2 launch turtlebot3_gazebo empty_world.launch.py 
  273  ll
  274  ros2 run  turtlebot3_teleop teleop_keyboard 
  275  vim .gitconfig 
  276  cd ROS2Dev/ros2_ws/src
  277  l
  278  ll
  279  cd ..
  280  ll
  281  git init
  282  echo "build/" >> .gitignore
  283  echo "install/" >> .gitignore
  284  echo "log/" >> .gitignore
  285  gst
  286  git status 
  287  echo "# ARRG: Curso ROS2 Humble - 2024-I" >> Readme.md
  288  ll
  289  code .
  290  ll
  291  rm -rf .git/
  292  mv .gitignore ./src
  293  mv Readme.md ./src
  294  ll
  295  cd src
  296  ros2
  297  code .
  298  ll
  299  vim .bash_aliases 
  300  actapt 
  301  sudo apt upgrade -y
  302  printenv | grep -i ROS
  303  printenv | grep -i "ROS_"
  304  rospath
  305  ros2 pkg -l
  306  ros2 pkg -h
  307  ros2 pkg list
  308  cd ROS2Dev/
  309  l
  310  mkdir -p prjcrs_ws/src
  311  l
  312  cd prjcrs_ws/
  313  history | grep colcon 
  314  colcon build --symlink-install
  315  ls
  316  cd src
  317  code .
  318  vim .bashrc 
  319  rstterm 
  320  cd ROS2Dev/
  321  l
  322  vim ~/.bash_aliases 
  323  refrescar 
  324  cd prjcrs_ws/src/
  325  source ~/ROS2Dev/prjcrs_ws/install/setup.bash 
  326  ros2 pkg create prj01 --build-type ament_python --dependencies rclpy
  327  cd ..
  328  cd src/
  329  code .
  330  cd ..
  331  colcon build
  332  pip3 list
  333  pip3 list | setup tools
  334  pip3 list | grep setuptools
  335  nano .bash_aliases 
  336  nano ~/.bash_aliases 
  337  nano ~/.bashrc
  338  printenv | grep -i 'ROS_'
  339  printenv | grep -i ROS
  340  printenv | grep -i 'ROS|AMENT'
  341  printenv | grep -i 'ROS\|AMENT'
  342  printenv | grep -i 'ROS\|AMENT_PREFIX_PATH'
  343  cd
  344  ll
  345  history >> ros2vm-history-021023.txt 
